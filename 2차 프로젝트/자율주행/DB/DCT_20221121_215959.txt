-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- AREA Table Create SQL
CREATE TABLE AREA
(
    A_NO      NUMBER(5, 0)     NOT NULL, 
    A_NAME    VARCHAR2(30)     NOT NULL, 
    A_W       NUMBER(10, 0)    NOT NULL, 
    A_H       NUMBER(10, 0)    NOT NULL, 
    A_SRC     VARCHAR2(100)    NOT NULL, 
     PRIMARY KEY (A_NO)
)
/

CREATE SEQUENCE AREA_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER AREA_AI_TRG
BEFORE INSERT ON AREA 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT AREA_SEQ.NEXTVAL
    INTO :NEW.A_NO
    FROM DUAL;
END;
/

--DROP TRIGGER AREA_AI_TRG; /

--DROP SEQUENCE AREA_SEQ; /

COMMENT ON COLUMN AREA.A_NO IS '구역 번호'
/

COMMENT ON COLUMN AREA.A_NAME IS '구역 이름'
/

COMMENT ON COLUMN AREA.A_W IS '구역 가로 폭'
/

COMMENT ON COLUMN AREA.A_H IS '구역 세로 폭'
/

COMMENT ON COLUMN AREA.A_SRC IS '구역 설계도'
/


-- ROBOT Table Create SQL
CREATE TABLE ROBOT
(
    R_NO       NUMBER(5, 0)    NOT NULL, 
    R_MODEL    VARCHAR2(30)    NOT NULL, 
    R_STATE    VARCHAR2(3)     DEFAULT 'S' NOT NULL, 
    S_NO       NUMBER(5, 0)    NULL, 
    R_SPEED    NUMBER(3, 2)    DEFAULT 0 NOT NULL, 
     PRIMARY KEY (R_NO)
)
/

CREATE SEQUENCE ROBOT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ROBOT_AI_TRG
BEFORE INSERT ON ROBOT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ROBOT_SEQ.NEXTVAL
    INTO :NEW.R_NO
    FROM DUAL;
END;
/

--DROP TRIGGER ROBOT_AI_TRG; /

--DROP SEQUENCE ROBOT_SEQ; /

COMMENT ON TABLE ROBOT IS '로봇'
/

COMMENT ON COLUMN ROBOT.R_NO IS '로봇 번호'
/

COMMENT ON COLUMN ROBOT.R_MODEL IS '로봇 모델'
/

COMMENT ON COLUMN ROBOT.R_STATE IS '작동 상태. 대기:''S'', 작업:''W'', 이동:''M'', 점검:''C'''
/

COMMENT ON COLUMN ROBOT.S_NO IS '추종 앵커'
/

COMMENT ON COLUMN ROBOT.R_SPEED IS '로봇 속도'
/


-- SENSOR Table Create SQL
CREATE TABLE SENSOR
(
    S_NO       NUMBER(5, 0)     NOT NULL, 
    S_ID       VARCHAR2(30)     NOT NULL, 
    R_NO       NUMBER(5, 0)     NULL, 
    A_NO       NUMBER(5, 0)     NULL, 
    S_LOC_X    NUMBER(10, 0)    NULL, 
    S_LOC_Y    NUMBER(10, 0)    NULL, 
    S_TYPE     VARCHAR2(5)      NOT NULL, 
    S_STATE    NUMBER(1, 0)     DEFAULT 1 NOT NULL, 
     PRIMARY KEY (S_NO)
)
/

CREATE SEQUENCE SENSOR_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER SENSOR_AI_TRG
BEFORE INSERT ON SENSOR 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT SENSOR_SEQ.NEXTVAL
    INTO :NEW.S_NO
    FROM DUAL;
END;
/

--DROP TRIGGER SENSOR_AI_TRG; /

--DROP SEQUENCE SENSOR_SEQ; /

COMMENT ON TABLE SENSOR IS '센서'
/

COMMENT ON COLUMN SENSOR.S_NO IS '센서 번호'
/

COMMENT ON COLUMN SENSOR.S_ID IS '센서 아이디'
/

COMMENT ON COLUMN SENSOR.R_NO IS '로봇 번호'
/

COMMENT ON COLUMN SENSOR.A_NO IS '구역 번호'
/

COMMENT ON COLUMN SENSOR.S_LOC_X IS '설치 위치 X'
/

COMMENT ON COLUMN SENSOR.S_LOC_Y IS '설치 위치 Y'
/

COMMENT ON COLUMN SENSOR.S_TYPE IS '센서 유형. 고정형 태그:''FT'', 사용자용 태그:''MT'', 로봇 좌측 앵커:''RL'', 로봇 우측 앵커: ''RR'''
/

COMMENT ON COLUMN SENSOR.S_STATE IS '센서 상태. 꺼짐: 0, 켜짐: 1'
/

ALTER TABLE SENSOR
    ADD CONSTRAINT FK_SENSOR_R_NO_ROBOT_R_NO FOREIGN KEY (R_NO)
        REFERENCES ROBOT (R_NO) ON DELETE RESTRICT 
/

ALTER TABLE SENSOR
    ADD CONSTRAINT FK_SENSOR_A_NO_AREA_A_NO FOREIGN KEY (A_NO)
        REFERENCES AREA (A_NO) ON DELETE RESTRICT 
/


-- INFO Table Create SQL
CREATE TABLE INFO
(
    I_NO      NUMBER(5, 0)    NOT NULL, 
    A_NO      NUMBER(5, 0)    NOT NULL, 
    S_NO      NUMBER(5, 0)    NULL, 
    R_NO      NUMBER(5, 0)    NULL, 
    I_INFO    VARCHAR2(30)    NOT NULL, 
    I_TIME    DATE            NOT NULL, 
     PRIMARY KEY (I_NO)
)
/

CREATE SEQUENCE INFO_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER INFO_AI_TRG
BEFORE INSERT ON INFO 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT INFO_SEQ.NEXTVAL
    INTO :NEW.I_NO
    FROM DUAL;
END;
/

--DROP TRIGGER INFO_AI_TRG; /

--DROP SEQUENCE INFO_SEQ; /

COMMENT ON TABLE INFO IS '정보'
/

COMMENT ON COLUMN INFO.I_NO IS '정보 번호'
/

COMMENT ON COLUMN INFO.A_NO IS '구역 번호'
/

COMMENT ON COLUMN INFO.S_NO IS '센서 번호'
/

COMMENT ON COLUMN INFO.R_NO IS '로봇 번호'
/

COMMENT ON COLUMN INFO.I_INFO IS '내용'
/

COMMENT ON COLUMN INFO.I_TIME IS '기록 시간. FORMAT : YYYY-MM-DD HH:MI:SS'
/

ALTER TABLE INFO
    ADD CONSTRAINT FK_INFO_R_NO_ROBOT_R_NO FOREIGN KEY (R_NO)
        REFERENCES ROBOT (R_NO) ON DELETE RESTRICT 
/

ALTER TABLE INFO
    ADD CONSTRAINT FK_INFO_A_NO_AREA_A_NO FOREIGN KEY (A_NO)
        REFERENCES AREA (A_NO) ON DELETE RESTRICT 
/

ALTER TABLE INFO
    ADD CONSTRAINT FK_INFO_S_NO_SENSOR_S_NO FOREIGN KEY (S_NO)
        REFERENCES SENSOR (S_NO) ON DELETE RESTRICT 
/


-- LOC Table Create SQL
CREATE TABLE LOC
(
    L_NO      NUMBER(5, 0)     NOT NULL, 
    S_NO      NUMBER(5, 0)     NULL, 
    R_NO      NUMBER(5, 0)     NULL, 
    A_NO      NUMBER(5, 0)     NULL, 
    L_X       NUMBER(10, 2)    NOT NULL, 
    L_Y       NUMBER(10, 2)    NOT NULL, 
    L_TIME    DATE             NOT NULL, 
     PRIMARY KEY (L_NO)
)
/

CREATE SEQUENCE LOC_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER LOC_AI_TRG
BEFORE INSERT ON LOC 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT LOC_SEQ.NEXTVAL
    INTO :NEW.L_NO
    FROM DUAL;
END;
/

--DROP TRIGGER LOC_AI_TRG; /

--DROP SEQUENCE LOC_SEQ; /

COMMENT ON TABLE LOC IS '위치'
/

COMMENT ON COLUMN LOC.L_NO IS '위치 번호'
/

COMMENT ON COLUMN LOC.S_NO IS '센서 번호'
/

COMMENT ON COLUMN LOC.R_NO IS '로봇 번호'
/

COMMENT ON COLUMN LOC.A_NO IS '구역 번호'
/

COMMENT ON COLUMN LOC.L_X IS '위치 X'
/

COMMENT ON COLUMN LOC.L_Y IS '위치 Y'
/

COMMENT ON COLUMN LOC.L_TIME IS '기록 시간'
/

ALTER TABLE LOC
    ADD CONSTRAINT FK_LOC_R_NO_ROBOT_R_NO FOREIGN KEY (R_NO)
        REFERENCES ROBOT (R_NO) ON DELETE RESTRICT 
/

ALTER TABLE LOC
    ADD CONSTRAINT FK_LOC_S_NO_SENSOR_S_NO FOREIGN KEY (S_NO)
        REFERENCES SENSOR (S_NO) ON DELETE RESTRICT 
/

ALTER TABLE LOC
    ADD CONSTRAINT FK_LOC_A_NO_AREA_A_NO FOREIGN KEY (A_NO)
        REFERENCES AREA (A_NO) ON DELETE RESTRICT 
/


